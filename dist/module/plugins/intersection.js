/* grapper - 1.1.0-beta.9 [module:plugin.intersection] */ var l="intersection.enter",a="intersection.exit",r=Symbol();function f(n){let s=t=>{setTimeout(()=>(this._el||this.svg?._el||this).dispatchEvent(new CustomEvent(t,{bubbles:!0,cancelable:!0,composed:!0})),50)},o=!0,e=!1;this[r]&&this[r].disconnect(),this[r]=new IntersectionObserver(t=>{t.forEach(i=>{i.isIntersecting&&i.intersectionRatio>=n?e||(e=!0,s(l)):(e||o)&&(e=!1,s(a))}),o=!1},{root:null,rootMargin:"0px",threshold:Array(21).fill(0).map((t,i)=>i*.05)}),this[r].observe(this._el||this)}var c=f;function h(n){n.extendInstance({intersection:c}),n.extendTemplate&&n.extendTemplate.defineDirective({name:"g-intersection",exec(s,{expr:o,evalExpr:e,ctx:t}){let i=e(o,t);s.intersection(i)}})}var m=h;export{m as default};